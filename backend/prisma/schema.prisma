// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int      @id @default(autoincrement()) @map("id")
  username          String?  @unique @map("username") @db.VarChar(32)
  email             String   @unique @map("email") @db.VarChar(255)
  firstName         String?  @map("first_name") @db.VarChar(64)
  lastName          String?  @map("last_name") @db.VarChar(64)
  password          String?  @map("password") @db.VarChar(72)
  avatarPath        String   @map("avatar_path") @db.VarChar(255)
  fortyTwoAccountId String?  @map("forty_two_account_id") @db.VarChar(255)
  googleAccountId   String?  @map("google_account_id") @db.VarChar(255)
  is2faEnabled      Boolean  @default(false) @map("is_2fa_enabled")
  verifyEmailToken  String?  @unique() @map("verify_email_token") @db.VarChar(255)
  isEmailVerified   Boolean  @default(false) @map("is_email_verified")
  createdAt         DateTime @default(now()) @map("created_at") @db.Timestamp()
  updatedAt         DateTime @updatedAt @map("updated_at") @db.Timestamp()

  followedBy Contact[] @relation("following")
  following  Contact[] @relation("follower")

  @@map("users")
}

model Contact {
  id          Int           @id @default(autoincrement()) @map("id")
  followerId  Int
  followingId Int
  status      ContactStatus @default(PENDING)
  createdAt   DateTime      @default(now()) @map("created_at") @db.Timestamp()
  updatedAt   DateTime      @updatedAt @map("updated_at") @db.Timestamp()

  follower  User @relation("follower", fields: [followerId], references: [id])
  following User @relation("following", fields: [followingId], references: [id])

  @@unique([followerId, followingId])
  @@map("contacts")
}

enum ContactStatus {
  ACCEPTED
  PENDING
}
